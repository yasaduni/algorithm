package sort;

public class Steque<T> {
	 private Node<T> front;
	    private Node<T> rear;
	    private int size;

	    private static class Node<T> {
	        T data;
	        Node<T> next;

	        Node(T data) {
	            this.data = data;
	            this.next = null;
	        }
	    }

	    public Steque() {
	        front = null;
	        rear = null;
	        size = 0;
	    }

	    // Push an element onto the top of the Steque
	    public void push(T item) {
	        Node<T> newNode = new Node<>(item);
	        if (isEmpty()) {
	            front = rear = newNode;
	        } else {
	            newNode.next = front;
	            front = newNode;
	        }
	        size++;
	    }

	    // Pop an element from the top of the Steque
	    public T pop() {
	        if (isEmpty()) {
	            throw new RuntimeException("Steque is empty");
	        }
	        T item = front.data;
	        front = front.next;
	        if (front == null) {
	            rear = null;
	        }
	        size--;
	        return item;
	    }

	    // Enqueue an element at the bottom of the Steque
	    public void enqueue(T item) {
	        Node<T> newNode = new Node<>(item);
	        if (isEmpty()) {
	            front = rear = newNode;
	        } else {
	            rear.next = newNode;
	            rear = newNode;
	        }
	        size++;
	    }

	    // Check if the Steque is empty
	    public boolean isEmpty() {
	        return front == null;
	    }

	    // Get the size of the Steque
	    public int size() {
	        return size;
	    }

	    // Main method for testing the Steque
	    public static void main(String[] args) {
	        Steque<Integer> steque = new Steque<>();

	        // Push elements
	        steque.push(1);
	        steque.push(2);
	        steque.push(3);

	        // Pop elements
	        System.out.println("Popped: " + steque.pop()); // Output: Popped: 3

	        // Enqueue elements
	        steque.enqueue(4);
	        steque.enqueue(5);

	        // Pop elements again
	        System.out.println("Popped: " + steque.pop()); // Output: Popped: 2

	        // Check size
	        System.out.println("Size of Steque: " + steque.size()); // Output: Size of Steque: 3
	    }
	}
	
	
